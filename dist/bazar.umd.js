!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.bazar={})}(this,function(e){var t=new Map;e.getState=function(e){var n=(t.get(e)||{}).sync;return n?n():void 0},e.register=function(e){var n=e.id,r=e.interests;void 0===r&&(r=[]);var o=e.willRerender,i=e.onEdict;if("string"!=typeof n)throw new TypeError("id should be a string");if(t.has(n)&&!o)throw new Error("Expected unique id");if(r.length>0&&"function"!=typeof i)throw new Error("onEdict is required when expressing interests");t.set(n,Object.assign({},e,{interests:new Set(r)}))},e.edict=function(e){var n=t.get(e).sync;if(!n)throw new Error("Sync is required to issue an edict");var r=n();t.forEach(function(t){t.interests.has(e)&&(0,t.onEdict)(e,r)})},e.poke=function(e,n){var r=(t.get(e)||{}).onPoke;if(!r)throw new Error("Poking component without onPoke method");r(n)},e.clearStore=function(){return t.clear()}});
